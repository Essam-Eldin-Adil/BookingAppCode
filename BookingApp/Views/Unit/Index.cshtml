@model SingleUnitViewModel
@{
    ViewBag.Title = Model.Unit.Name;
    Layout = "~/Views/Shared/_Layout_old.cshtml";
    var grad = Model.Unit.UnitImages.Count > 5 ? 3 : Model.Unit.UnitImages.Count;
    var dates = Model.DateTo.Date - Model.DateFrom.Date;
    var nights = Math.Abs(dates.Days);
    var rate = (Model.Rate.Cleaning + Model.Rate.Crew + Model.Rate.PropertyCondition) / 3;
    if (rate + "" == double.NaN.ToString())
    {
        rate = 0;
    }
    var returnUrl = Url.Action("Index", new { id = Model.Unit.Id, DateFrom = Model.DateFrom, DateTo = Model.DateTo });

    var hasOffer = false;
    var offerAmount = 0.0;
    if (Model.Unit.Offers != null)
    {
        if (Model.Unit.Offers.Count > 0)
        {
            hasOffer = Model.Unit.Offers.Any();
            offerAmount = Model.Unit.Offers.FirstOrDefault().Amount;
        }
    }
}
@section css{
    <!-- Star Rating CSS -->
    <link rel="stylesheet" href="~/css/components/bs-rating.css" type="text/css" />
    <link rel="stylesheet" href="css/components/daterangepicker.css" type="text/css" />
    <style>
        .rating-stars {
            font-size: 20px !important;
        }

        .slider-wrap {
            max-height: 590px !important
        }

        .flex-control-nav {
            max-height: 150px !important
        }

            .flex-control-nav img {
                max-height: 120px !important
            }
    </style>
}
<div class="mb-5">
    <div class="fslider flex-thumb-grid grid-6" data-animation="fade" data-arrows="true" data-thumbs="true">
        <div class="flexslider">
            <div class="slider-wrap masonry-thumbs" data-lightbox="gallery">
                @foreach (var img in Model.Unit.UnitImages.OrderBy(c => c.IsPrimary))
                {
                    <div class="slide" data-thumb="@Url.Content("~/" + img.File.FileContent)">
                        <a class="grid-item" href="@Url.Content("~/" + img.File.FileContent)" data-lightbox="gallery-item">
                            <img src="@Url.Content("~/" + img.File.FileContent)" alt="Image">
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="mt-2">
        @if (SessionClass.IsAuthentecated(HttpContextAccessor.HttpContext))
        {
            @if (Fiverates.IsFive(HttpContextAccessor.HttpContext, Model.Unit.Id))
            {
                <button id="fiveBtn" onclick="five('@Model.Unit.Id')" class="btn btn-danger">
                    <i class="icon-folder-close"></i> @Resource.RemoveFromMyFiverates
                </button>
            }
            else
            {
                <button id="fiveBtn" onclick="five('@Model.Unit.Id')" class="btn btn-primary">
                    <i class="icon-folder-open"></i> @Resource.AddToMyFiverates
                </button>
            }
            <div class="btn-group">
                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="icon-share-alt"></i> @Resource.Share
                </button>
                <div class="dropdown-menu" style="">
                    <button type="button" class="dropdown-item" onclick="window.open('https://www.facebook.com/sharer/sharer.php?u=' + location.href)"><i class="icon-facebook-f"></i> @Resource.ShareFb</button>
                    <button type="button" class="dropdown-item" onclick="window.open('whatsapp://send?text=' + location.href)"><i class="icon-whatsapp"></i> @Resource.whatsapp</button>
                    <button type="button" class="dropdown-item" onclick="window.open('http://twitter.com/home/?status=' + location.href)"><i class="icon-twitter"></i> @Resource.twitter</button>
                    <div class="dropdown-divider"></div>
                    <button class="dropdown-item" type="button">@Resource.CopyLink</button>
                </div>
            </div>

        }
        else
        {
            <form asp-action="Join" asp-controller="User" method="get" asp-route-returnurl="@returnUrl">
                <input type="hidden" name="returnUrl" value="@returnUrl" />
                <button type="submit" class="btn btn-primary">
                    <i class="icon-folder-open"></i> @Resource.AddToMyFiverates
                </button>
                <div class="btn-group">
                    <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="icon-share-alt"></i> @Resource.Share
                    </button>
                    <div class="dropdown-menu" style="">
                        <button type="button" class="dropdown-item" onclick="window.open('https://www.facebook.com/sharer/sharer.php?u=' + location.href)"><i class="icon-facebook-f"></i> @Resource.ShareFb</button>
                        <button type="button" class="dropdown-item" onclick="window.open('whatsapp://send?text=' + location.href)"><i class="icon-whatsapp"></i> @Resource.whatsapp</button>
                        <button type="button" class="dropdown-item" onclick="window.open('http://twitter.com/home/?status=' + location.href)"><i class="icon-twitter"></i> @Resource.twitter</button>
                        <div class="dropdown-divider"></div>
                        <button class="dropdown-item" type="button">@Resource.CopyLink</button>
                    </div>
                </div>

            </form>
        }
    </div>
    <div class="row mt-2">
        <div class="col-md-8">
            <h3 class="mb-1">
                @Model.Unit.Name
                @if (Model.Unit.IsSimilar)
                {
                    <span>(@Model.Unit.Number)</span>
                }
            </h3>
            @if (!string.IsNullOrEmpty(Model.Unit.Code))
            {
                <h4 class="text-muted">
                    @Resource.UnitCode (@Model.Unit.Code)

                </h4>
            }
            <div class="row">
                <div class="col-md-6">
                    <p class="mb-0">
                        <i class="icon-star3 text-warning"></i>
                        <strong>
                            @string.Format("{0:N2}", rate) (@Model.Rates.Count()) @Resource.Rate
                        </strong>
                    </p>
                    <p class="mb-0"><i class="icon-location"></i> @Model.Unit.Chalet.City.CityName, @Model.Unit.Chalet.Region, @Model.Unit.Chalet.Neighborhood</p>
                </div>
                <div class="col-md-6 border-left">
                    <p class="mb-0"><i class="icon-memory"></i> @Resource.UnitSpace @Model.Unit.Space @Resource.SquareMeters</p>
                    <p class="mb-0">
                        <i class="icon-users"></i> @Resource.PersonsAllowed @Model.Unit.AllowedPersons
                    </p>
                </div>
            </div>
            <h4 class="mt-3 mb-1">@Resource.UnitDescription</h4>
            <p>@Model.Unit.Description</p>

            <div class="tabs tabs-alt tabs-justify clearfix" id="tab-10">

                <ul class="tab-nav clearfix">
                    <li><a href="#tabs-Specifications"><i class="icon-list mr-0"></i> @Resource.Specifications</a></li>
                    <li><a href="#tabs-Reviews"><i class="icon-star text-warning"></i> @Resource.Reviews</a></li>
                    <li><a href="#tabs-Map"><i class="icon-map-marked text-info"></i> @Resource.Map</a></li>
                </ul>

                <div class="tab-container">
                    <div class="tab-content clearfix" id="tabs-Specifications">

                        @if (Model.Unit.Chalet.PropertyType == (int)Enums.PropertyType.Resort)
                        {
                            <h5>@Resource.UnitSpecifications</h5>
                        }
                        @if (!Model.ParameterGroups.Any())
                        {
                            <div class="alert alert-primary">
                                @Resource.SorryNoSpecifications
                            </div>
                        }
                        @foreach (var group in Model.ParameterGroups)
                        {
                            @if (group.Parameters.Count > 0)
                            {
                                <div class="toggle mb-1">
                                    <div class="toggle-header justify-content-between flex-row-reverse">
                                        <div class="toggle-title font-weight-semibold">
                                            @if (group.Image != Guid.Empty)
                                            {
                                                <img alt='Image' src='@Url.Content("~/" + Domain.File.GetImage(HttpContextAccessor.HttpContext, group.Image))' height='35' width='35' />
                                            }
                                            @group.Name
                                        </div>
                                        <div class="toggle-icon">
                                            <i class="toggle-closed icon-angle-down1"></i>
                                            <i class="toggle-open icon-angle-up1"></i>
                                        </div>
                                    </div>
                                    <div class="toggle-content">
                                        <div class="row">
                                            @foreach (var param in group.Parameters.OrderBy(c => c.Index))
                                            {
                                                <div class="col-md-12">
                                                    @if (param.Type == (int)Enums.ParameterType.Text)
                                                    {
                                                        <label for="@param.Name" value="@param.Id" class="checkbox-style-2-label checkbox-small"><i class="icon-ok"></i> @param.Name: @param.Value</label>
                                                    }
                                                    else
                                                    {
                                                        <i class="icon-ok"></i> @param.Name
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        @if (Model.Unit.Chalet.PropertyType == (int)Enums.PropertyType.Resort)
                        {
                            <hr />
                            <h5>@Resource.ResortSpecifications</h5>
                        }
                        @foreach (var group in Model.ResortParameterGroups)
                        {
                            @if (group.Parameters.Count > 0)
                            {
                                <div class="toggle mb-1">
                                    <div class="toggle-header justify-content-between flex-row-reverse">
                                        <div class="toggle-title font-weight-semibold">
                                            @if (group.Image != Guid.Empty)
                                            {
                                                <img alt='Image' src='@Url.Content("~/" + Domain.File.GetImage(HttpContextAccessor.HttpContext, group.Image))' height='35' width='35' />
                                            }
                                            @group.Name
                                        </div>
                                        <div class="toggle-icon">
                                            <i class="toggle-closed icon-angle-down1"></i>
                                            <i class="toggle-open icon-angle-up1"></i>
                                        </div>
                                    </div>
                                    <div class="toggle-content">
                                        <div class="row">
                                            @foreach (var param in group.Parameters.OrderBy(c => c.Index))
                                            {
                                                <div class="col-md-12">
                                                    @if (param.Type == (int)Enums.ParameterType.Text)
                                                    {
                                                        <label for="@param.Name" value="@param.Id" class="checkbox-style-2-label checkbox-small"><i class="icon-ok"></i> @param.Name: @param.Value</label>
                                                    }
                                                    else
                                                    {
                                                        <i class="icon-ok"></i> @param.Name
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        }

                    </div>
                    <div class="tab-content clearfix" id="tabs-Reviews">
                        @if (!Model.Rates.Any())
                        {


                            <div class="alert alert-primary">
                                @Resource.SorryNoRates
                            </div>
                        }
                        else
                        {
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="card card-body">
                                        <h4 class="mb-0">
                                            <i class="icon-shower text-success"></i>
                                            @Resource.Cleaning
                                        </h4>
                                        <div style="direction: ltr;">
                                            <input class="rating" value="@Model.Rate.Cleaning" data-size="sm" data-disabled="true">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card card-body">
                                        <h4 class="mb-0">
                                            <i class="icon-group text-primary"></i>
                                            @Resource.Crew
                                        </h4>
                                        <div style="direction: ltr;">
                                            <input class="rating" value="@Model.Rate.Crew" data-size="sm" data-disabled="true">
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card card-body">
                                        <h4 class="mb-0">
                                            <i class="icon-hotel text-danger"></i>
                                            @Resource.PropertyCondition
                                        </h4>
                                        <div style="direction: ltr;">
                                            <input class="rating" value="@Model.Rate.PropertyCondition" data-size="sm" data-disabled="true">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <ol class="commentlist clearfix mt-3">
                                @foreach (var comment in Model.Rates)
                                {
                                    var userRate = (comment.Cleaning + comment.Crew + comment.PropertyCondition) / 3;
                                    <li class="comment even thread-even depth-1" id="li-comment-1">
                                        <div id="comment-1" class="comment-wrap clearfix">
                                            <div class="comment-meta">
                                                <div class="comment-author vcard">
                                                    <span class="comment-avatar clearfix">
                                                        <img alt='Image' src='@Url.Content("~/" + Domain.File.GetImage(HttpContextAccessor.HttpContext, comment.User.Image))' height='60' width='60' />
                                                    </span>
                                                </div>
                                            </div>

                                            <div class="comment-content clearfix">
                                                <div class="comment-author">@comment.User.FirstName @comment.User.LastName<span><span title="Permalink to this comment">@comment.CreatedDate.ToString("G")</span></span></div>
                                                <p>@comment.Comment</p>
                                                <div style="direction:ltr">
                                                    <input class="rating review-comment" value="@userRate" data-size="sm" data-disabled="true">
                                                </div>
                                            </div>
                                            <div class="clear"></div>
                                        </div>
                                    </li>
                                }

                            </ol>
                        }
                    </div>
                    <div class="tab-content clearfix" id="tabs-Map">
                        <p>@Resource.LocationIn @Model.Unit.Chalet.City.CityName, @Resource.Region @Model.Unit.Chalet.Region, @Resource.Neighborhood @Model.Unit.Chalet.Neighborhood  </p>
                        @if (!(bool)ViewBag.hasReservation)
                        {
                            <i class="text-primary">@Resource.LocationWillShowAfterReservation</i>
                        }
                        else
                        {
                            <div class="min-vh-40" id="google-map"></div>
                        }

                    </div>
                </div>

            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h3 class="mb-2">
                        @if (hasOffer)
                        {
                            <small><del>@Model.Unit.DayPrice @Resource.Currency</del></small>
                            <br />
                            <span>@offerAmount</span>
                        }
                        else
                        {
                            <span>
                                @Model.Unit.DayPrice
                            </span>
                        }

                        <small><span>@Resource.Currency</span> / @Resource.PricePerNight</small>
                    </h3>
                    <table class="table table-bordered">
                        <tr>
                            <td>
                                <strong>@Resource.ArriveDate</strong>
                                <br />
                                @Model.DateFrom.ToString("dd-MM-yyyy")
                            </td>
                            <td>
                                <strong>@Resource.LeaveDate</strong>
                                <br />
                                @if (Model.DateTo.Date == Model.DateFrom.Date || Model.DateTo.Date < Model.DateFrom.Date)
                                {
                                    @Model.DateFrom.AddDays(1).ToString("dd-MM-yyyy")
                                }
                                else
                                {
                                    <span>@Model.DateTo.ToString("dd-MM-yyyy")</span>
                                }
                                <i class="cursorChecInOutChange icon-chevron-down1" data-toggle="modal" data-target="#dateModal"></i>
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2">
                                <strong>@Resource.NightCount</strong>
                                <br />
                                @if (Model.DateTo.Date == Model.DateFrom.Date || Model.DateTo.Date < Model.DateFrom.Date)
                                {
                                    @Resource.OneNight
                                }
                                else
                                {
                                    <p>
                                        @if (nights == 1)
                                        {
                                            @Resource.OneNight
                                        }
                                        else if (nights == 2)
                                        {
                                            <span>@Resource.TowNight</span>
                                        }
                                        else if (nights > 10)
                                        {
                                            <span>@nights @Resource.Night</span>
                                        }
                                        else
                                        {
                                            <span>@nights @Resource.Nights</span>
                                        }
                                    </p>
                                }

                            </td>
                        </tr>
                        <tr>
                            <td>
                                <strong><i class="icon-sign-in-alt"></i> @Resource.ENTERTIME </strong>
                                <br />
                                @Model.Unit.Chalet.EnterTime.ToString("hh:mm tt")
                            </td>
                            <td>
                                <strong><i class="icon-sign-out-alt"></i> @Resource.EXITTIME</strong>
                                <br />
                                @Model.Unit.Chalet.ExitTime.ToString("hh:mm tt")
                            </td>
                        </tr>
                    </table>
                    @if (Model.Unit.IsReserved)
                    {
                        <button type="button" data-toggle="modal" data-target="#dateModal" class="btn btn-success w-100">@Resource.UnAvailabeChoseAnotherDate</button>
                    }
                    else
                    {
                        <a href="@Url.Action("Reserve","Unit",new { id=Model.Unit.Id,CheckIn=Model.DateFrom.Date,CheckOut=Model.DateTo.Date })" class="btn btn-success w-100">@Resource.Reserve</a>
                    }
                    <p class="w-100 text-center">@Resource.YouWillPayNow @Model.Unit.DepositAmount @Resource.Currency</p>
                    <h4 class="my-1">@Resource.InvoiceDetails</h4>

                    <div class="table-responsive">
                        <table class="table cart mb-0">
                            <tbody>
                                <tr class="cart_item">
                                    <td class="border-top-0 cart-product-name">
                                        @if (Model.DateTo.Date == Model.DateFrom.Date || Model.DateTo.Date < Model.DateFrom.Date)
                                        {
                                            <span>@Resource.OneNight * @Model.Unit.DayPrice @Resource.Currency</span>
                                        }
                                        else
                                        {
                                            @if (nights == 1)
                                            {
                                                <span>@Resource.OneNight * @Model.Unit.DayPrice @Resource.Currency</span>
                                            }
                                            else if (nights == 2)
                                            {
                                                <span>@Resource.TowNight * @Model.Unit.DayPrice @Resource.Currency</span>
                                            }
                                            else if (nights > 10)
                                            {
                                                <span>@nights @Resource.Night * @Model.Unit.DayPrice @Resource.Currency</span>
                                            }
                                            else
                                            {
                                                <span>@nights @Resource.Nights * @Model.Unit.DayPrice @Resource.Currency</span>
                                            }
                                        }

                                    </td>
                                    <td class="border-top-0 text-right cart-product-name">
                                        @{
                                            var amount = Model.Unit.DayPrice * nights;
                                        }
                                        <span class="amount">@amount @Resource.Currency</span>
                                    </td>
                                </tr>
                                <tr class="cart_item">
                                    <td class="cart-product-name">
                                        <strong>@Resource.Total</strong>
                                    </td>
                                    <td class="cart-product-name text-right">
                                        <span class="amount color lead"><strong>@amount @Resource.Currency</strong></span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    @*<small>
                            @Resource.PriceDescription
                        </small>*@
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="dateModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-body">
            <form method="get" class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="id" value="@Model.Unit.Id" />
                    <input type="hidden" name="DateFrom" id="DateFrom" value="@Model.DateFrom" />
                    <input type="hidden" name="DateTo" id="DateTo" value="@Model.DateTo" />
                    <input type="text" class="form-control daterange" value="@Model.DateFrom.ToString("MM/dd/yyyy") - @Model.DateTo.ToString("MM/dd/yyyy")" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@Resource.Close</button>
                    <button type="submit" class="btn btn-primary">@Resource.SaveChanges</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts{
    <script src="~/js/components/star-rating.js"></script>
    <script src="~/js/components/moment.js"></script>
    <script src="~/js/components/daterangepicker-ar.js"></script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBMvk54X0cJtOPiSu60rk-OdX8alzz7Htk&callback=initMap"
            type="text/javascript"></script>
    <script>


        let map, infoWindow;
        function initMap() {
            image = 'http://www.google.com/intl/en_us/mapfiles/ms/micons/blue-dot.png';

            var option = {
                center: { lat: 0, lng: 0 },
                zoom: 12,
                mapTypeId: "satellite",
                panControl: true,
                panControlOptions: {
                    position: google.maps.ControlPosition.TOP_RIGHT
                },
                zoomControl: true,
                zoomControlOptions: {
                    style: google.maps.ZoomControlStyle.LARGE,
                    position: google.maps.ControlPosition.TOP_left
                }
            };
            map = new google.maps.Map(document.getElementById("google-map"), option);

            marker = new google.maps.Marker({
                map: map,
                draggable: true,
                animation: google.maps.Animation.DROP,
                position: { lat: 0, lng: 0 }
            });

            var onChangeHandler = function () {

            };
            DisplayPoint(map);
            //document.getElementById('setMap').addEventListener('click', onChangeHandler);
            function DisplayPoint(map) {
                var lat = '@Model.Unit.Chalet.Latitude';
                var lng = '@Model.Unit.Chalet.Longitude';
                var latLng = new google.maps.LatLng(lat, lng);
                marker.setPosition(latLng);
                map.panTo(latLng);

            }

        }
        //google.maps.event.trigger(map, 'resize');

        $(".review-comment").rating({
            containerClass: 'review-comment-ratings',
        //    starCaptions: { 0: "Not Rated", 1: "Very Poor", 2: "Poor", 3: "Ok", 4: "Good", 5: "Very Good" },
        });
        // .daterange1
        $(".daterange").daterangepicker({
            inline: true,
            "buttonClasses": "button button-rounded button-mini m-0",
            "applyClass": "button-color",
            "cancelClass": "button-light"
        },
            function (start, end, label) {
                $("#DateFrom").val(start.format('MM/DD/YYYY'));
                $("#DateTo").val(end.format('MM/DD/YYYY'));
            });

        function five(id) {
            $.ajax({
                url: "@Url.Action("Fiverate","Unit")?id=" + id,
                type: "Get",
                dataType: "json",
                success: function (data) {
                    if (data) {
                        $("#fiveBtn").html("<i class='icon-folder-close'></i> @Resource.RemoveFromMyFiverates").addClass("btn-danger").removeClass("btn-primary");
                    } else {
                        $("#fiveBtn").html("<i class='icon-folder-open'></i> @Resource.AddToMyFiverates").removeClass("btn-danger").addClass("btn-primary");
                    }
                }
            });
        }
    </script>
}